// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VestalisQuintet.EconomyBot;

#nullable disable

namespace VQEconomyBot.Migrations
{
    [DbContext(typeof(VQEconomyBotDbContext))]
    [Migration("20220509164912_AddBalanceModel")]
    partial class AddBalanceModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("VestalisQuintet.EconomyBot.Models.Balance", b =>
                {
                    b.Property<int>("BalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BalanceValue")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("OwnerUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BalanceId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("VestalisQuintet.EconomyBot.Models.User", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VestalisQuintet.EconomyBot.Models.Balance", b =>
                {
                    b.HasOne("VestalisQuintet.EconomyBot.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
